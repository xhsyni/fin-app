# Generated by Django 5.1.2 on 2025-05-15 01:57

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(db_column='year')),
                ('category', models.CharField(db_column='category', max_length=30)),
                ('charge_income', models.DecimalField(db_column='chargeIncome', decimal_places=2, max_digits=12)),
                ('tax_rate', models.DecimalField(db_column='taxRate', decimal_places=2, max_digits=5)),
                ('tax_amount', models.DecimalField(db_column='tax_amount', decimal_places=2, max_digits=12)),
            ],
            options={
                'db_table': 'tax',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('userid', models.AutoField(db_column='userid', primary_key=True, serialize=False)),
                ('email', models.EmailField(db_column='email', max_length=254, unique=True)),
                ('name', models.CharField(db_column='name', max_length=150)),
                ('phone', models.CharField(db_column='phone', max_length=15, null=True)),
                ('job', models.CharField(db_column='job', max_length=30, null=True)),
                ('birth_date', models.DateField(db_column='birth_date', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('marital_status', models.BooleanField(db_column='marital_status', default=False)),
                ('ethnicity', models.CharField(db_column='ethnicity', max_length=30, null=True)),
                ('gender', models.CharField(db_column='gender', max_length=10, null=True)),
                ('nationality', models.CharField(db_column='nationality', max_length=30, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('expenseid', models.AutoField(db_column='expenseid', primary_key=True, serialize=False)),
                ('date', models.DateField(db_column='date')),
                ('category', models.CharField(db_column='category', max_length=50)),
                ('sub_category', models.CharField(db_column='sub_category', max_length=50)),
                ('amount', models.DecimalField(db_column='amount', decimal_places=2, max_digits=12)),
                ('name', models.CharField(db_column='name', max_length=150)),
                ('description', models.TextField(db_column='description', null=True)),
                ('deductible', models.BooleanField(db_column='isDeductible', default=False)),
                ('userid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'expense',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('fileid', models.AutoField(db_column='fileid', primary_key=True, serialize=False)),
                ('filepath', models.CharField(db_column='filepath', max_length=255)),
                ('expenseid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.expense')),
            ],
            options={
                'db_table': 'file',
            },
        ),
        migrations.CreateModel(
            name='Income',
            fields=[
                ('incomeid', models.AutoField(db_column='incomeid', primary_key=True, serialize=False)),
                ('category', models.CharField(db_column='category', max_length=50)),
                ('date', models.DateField(db_column='date')),
                ('source', models.CharField(db_column='source', max_length=50)),
                ('amount', models.DecimalField(db_column='amount', decimal_places=2, max_digits=20)),
                ('job', models.CharField(blank=True, db_column='job', max_length=30, null=True)),
                ('typeInc', models.CharField(blank=True, db_column='type', max_length=50, null=True)),
                ('userid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'income',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notificationid', models.AutoField(db_column='notificationid', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='title', max_length=150)),
                ('content', models.TextField(db_column='content')),
                ('datetime', models.DateTimeField(db_column='datetime')),
                ('is_read', models.BooleanField(db_column='is_read', default=False)),
                ('userid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notification',
            },
        ),
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('relationshipid', models.AutoField(db_column='relationshipid', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='name', max_length=150)),
                ('birth_date', models.DateField(db_column='birth_date', null=True)),
                ('relationship_type', models.CharField(db_column='relationship_type', max_length=50)),
                ('job', models.CharField(db_column='job', max_length=30, null=True)),
                ('expenses', models.DecimalField(db_column='expenses', decimal_places=2, default=0.0, max_digits=12)),
                ('userid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'relationship',
            },
        ),
        migrations.CreateModel(
            name='TaxUser',
            fields=[
                ('taxuserid', models.AutoField(db_column='taxuserid', primary_key=True, serialize=False)),
                ('tax_year', models.IntegerField(db_column='tax_year')),
                ('tax_income', models.DecimalField(db_column='tax_income', decimal_places=2, max_digits=12)),
                ('amount', models.DecimalField(db_column='amount', decimal_places=2, max_digits=12)),
                ('job', models.CharField(db_column='job', max_length=30, null=True)),
                ('userid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tax_user',
            },
        ),
        migrations.AddField(
            model_name='expense',
            name='taxuserid',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.taxuser'),
        ),
    ]
